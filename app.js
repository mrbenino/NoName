const { Telegraf } = require('telegraf')
const Extra = require('telegraf/extra')
const Markup = require('telegraf/markup')
const session = require('telegraf/session')
const Stage = require('telegraf/stage')
const Scene = require('telegraf/scenes/base')
const { leave,enter } = Stage
const config = require('config')
const bot = new Telegraf(config.get('token'))
const axios = require('axios');

const order = new Scene('order')
const stage = new Stage()

console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê')
console.log('‚îÇ bot by:  @mrbenino ‚îÇ')
console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò')

category = []

bot.use(Telegraf.log())
stage.register(order)
bot.use(session())
bot.use(stage.middleware())

bot.start((ctx) => {
    getCategory(ctx)
    return ctx.reply('üòâ')
})

bot.command('order', async (ctx) => {
    ctx.scene.enter('order')
    ctx.reply(`–ß—Ç–æ –±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –Ω–∞–º –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–µ—Ç–∞–ª–∏. ${ctx.message.from.first_name} –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø–ª–∞–∏—Ç—å –∑–∞–∫–∞–∑?`)
    category.splice(0, category.length + 1)
    category[0] = "–∫–∞—Ä—Ç–æ–π"
    category[1] = "–Ω–∞–ª–∏—á–Ω—ã–º–∏"
    category[2] = "/info"
    ctx.reply('–≤—ã–±–µ—Ä–∏—Ç–µ:', Extra.markup(
        Markup.keyboard(category, {
            columns: 2
        })
    ))
    order.command('info',async (ctx) => {
        ctx.reply('–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π - —É –Ω–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø–æ–æ—â—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –∫–∞—Ä—Ç–æ–π. \n –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ - –Ω–µ –∑–∞–±—É–¥—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —á–∞–µ–≤—ã–µ –µ—Å–ª–∏ –≤–∞–º –≤—Å–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å \n –ß—Ç–æ –±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞–∂–º–∏—Ç–µ /leave')
    })
    order.command('leave',(ctx) => {
        ctx.reply('üôÉ')
        getCategory(ctx)
        ctx.scene.leave()
    })
    await order.on('text', async (ctx) => {
        if (ctx.message.text == "–∫–∞—Ä—Ç–æ–π"){
            // ctx.reply('https://mrbenino.mnml.pp.ua/form.html')
            ctx.reply('<b>–ù–∞–∂–º–∏—Ç–µ</b> <i>üí≥ –æ–ø–ª–∞—Ç–∏—Ç—å</i> —á—Ç–æ –±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞–∫–∞–∑', Extra.HTML().markup((m) =>
            m.inlineKeyboard([
            m.urlButton('üí≥ –æ–ø–ª–∞—Ç–∏—Ç—å', 'https://mrbenino.mnml.pp.ua')
            ])))
            // getCategory(ctx)
            // ctx.scene.leave()
        }else if (ctx.message.text == "–Ω–∞–ª–∏—á–Ω—ã–º–∏"){
            ctx.reply('–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏')
            getCategory(ctx)
            ctx.scene.leave()
        }
        await ctx.scene.leave()
        await getCategory(ctx)
    })
    order.leave((ctx) => ctx.reply('–°–ø–∞—Å–∏–±–æ, –æ–∂–∏–¥–∞–π—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑ üòâ'))
})


bot.command('category', (ctx) => {
    getCategory(ctx)
    return ctx.reply('üòâ')
})

bot.command('allproduct', (ctx) => {
    getAll(ctx)
    return ctx.reply('üòâ')
})

bot.help( (ctx) => {
    ctx.reply('–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥: \n /category - –æ–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ \n /allproduct - –≤—Å–µ –±–ª—é–¥–∞ \n üòá')
    return ctx.reply('üòâ')
})

bot.on('text' , (ctx) => {
    let param = ctx.message.text
    byCategory(ctx , param)
    return ctx.reply('üòâ');
})

function getCategory(ctx) {    
    axios({
        method: 'POST',
        withCredentials: true,
        headers: {'Content-Type': 'application/x-www-form-urlencoded'},
        url: 'http://hookah.pp.ua/v1/user/login',
        data: 'email=franc@gmail.com&password=qwert12345'
    })
    .then(function (response) {  
        // console.log(response)      
        axios.get('http://hookah.pp.ua/v1/categories/get_all', {
        headers: {
            Authorization: `Bearer ${response.data}`,
            Cookie: `MY_SESSION=id%3D%2523i1; Max-Age=604800; Expires=Thu, 11 Jun 2020 11:20:30 GMT; Path=/; HttpOnly; SameSite=lax; $x-enc=URI_ENCODING`
            }
        })
        .then(function (response) {
            console.table(response.data);
            for (let i = 0; i < response.data.length; i++) {
                console.log(`${response.data[i].name}\n`);
                category[i] = response.data[i].name
            }
            category[response.data.length+1] = "/help"
            return ctx.reply('MENU', Extra.markup(
                Markup.keyboard(category, {
                    columns: 2
                })
            ))
        })
        .catch(function (error) {
            // console.log(error);
        })
    })
        .catch(function (error) {
        // console.log(error);
    })
};

function getAll(ctx){
    axios({
        method: 'POST',
        withCredentials: true,
        headers: {'Content-Type': 'application/x-www-form-urlencoded'},
        url: 'http://hookah.pp.ua/v1/user/login',
        data: 'email=franc@gmail.com&password=qwert12345'
    })
    .then(function (response) {  
        console.log(response)      
        axios.get('http://hookah.pp.ua/v1/products/get_all', {
        headers: {
            Authorization: `Bearer ${response.data}`,
            Cookie: `MY_SESSION=id%3D%2523i1; Max-Age=604800; Expires=Thu, 11 Jun 2020 11:20:30 GMT; Path=/; HttpOnly; SameSite=lax; $x-enc=URI_ENCODING`
          }
        })
        .then(function (response) {
            console.table(response.data);
            
            for (let i = 0; i < response.data.length; i++) {
                console.log(`${response.data[i].name}\n${response.data[i].description}\n${response.data[i].constituents}\n${response.data[i].price}\n${response.data[i].discount}`);
                
                ctx.reply(`${response.data[i].name}\n${response.data[i].description}\n${response.data[i].constituents}\n${response.data[i].price}\n${response.data[i].discount}`)
            }
        })
        .catch(function (error) {
            console.log(error);
        })
    })
    .catch(function (error) {
        console.log(error);
    })
};

function byCategory(ctx , param) {
    axios({
        method: 'POST',
        withCredentials: true,
        headers: {'Content-Type': 'application/x-www-form-urlencoded'},
        url: 'http://hookah.pp.ua/v1/user/login',
        data: 'email=franc@gmail.com&password=qwert12345'
    })
    .then(function (response) {  
        console.log(response)      
        axios.get(`http://hookah.pp.ua/v1/products/byCategory/${param}`, {
        headers: {
            Authorization: `Bearer ${response.data}`,
            Cookie: `MY_SESSION=id%3D%2523i1; Max-Age=604800; Expires=Thu, 11 Jun 2020 11:20:30 GMT; Path=/; HttpOnly; SameSite=lax; $x-enc=URI_ENCODING`
          }
        })
        .then(function (response) {
            console.table(response.data);
            
            for (let i = 0; i < response.data.length; i++) {
                console.log(`${response.data[i].name}\n${response.data[i].description}\n${response.data[i].constituents}\n${response.data[i].price}\n${response.data[i].discount}`);
                
                ctx.reply(`${response.data[i].name}\n${response.data[i].description}\n${response.data[i].constituents}\n${response.data[i].price}\n${response.data[i].discount}\n /order`)
            }
        })
        .catch(function (error) {
            console.log(error);
        })
    })
    .catch(function (error) {
        console.log(error);
    })
}

bot.launch()